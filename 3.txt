package web;

import java.io.IOException;
import java.util.Random;
import java.sql.SQLException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import dao.EmployeeDao;
import model.Employee;

/**
 * Servlet implementation class EmployeeServlet
 */
@WebServlet("/")
public class EmployeeServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private EmployeeDao employeeDao;
	
	Random random = new Random();
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public EmployeeServlet() {
    	this.employeeDao = new EmployeeDao();
        
    }
    
    /**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
			this.doGet(request, response);
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
			
		String action = request.getServletPath();
			
		switch (action) {
		case "/new":
			showNewForm(request, response);
			break;
		case "/insert":
			try {
				insertEmployee(request, response);
			}catch (SQLException e) {
				// TODO: handle exception
				e.printStackTrace();
			}
			break;
		case "/delete":
			try {
				deleteEmployee(request, response);
			}catch (SQLException e) {
				// TODO: handle exception
				e.printStackTrace();
			}
			break;
		case "/edit":
			try {
				showEditForm(request, response);
			}catch (SQLException e) {
				// TODO: handle exception
				e.printStackTrace();
			}
			break;
		case "/update":
			try {
				updateEmployee(request, response);
			}catch (SQLException e) {
				// TODO: handle exception
				e.printStackTrace();
			}
			break;
		default:
			try {
				listEmployee(request, response);
			}catch (SQLException e) {
				// TODO: handle exception
				e.printStackTrace();
			}
			break;
		
		}	
	
	}
	
	private void listEmployee(HttpServletRequest request, HttpServletResponse response)
	throws SQLException, IOException, ServletException {
		List<Employee> listEmployee = employeeDao.selectAllEmployees();
		System.out.println(listEmployee);
		request.setAttribute("listEmployee", listEmployee);
		RequestDispatcher dispatcher = request.getRequestDispatcher("employee-list.jsp");
		dispatcher.forward(request, response);
	
	}
	
	private void showNewForm(HttpServletRequest request,HttpServletResponse response)
	throws ServletException, IOException {
		RequestDispatcher dispatcher = request.getRequestDispatcher("employee-form.jsp");
		dispatcher.forward(request, response);
	}
	
	private void insertEmployee(HttpServletRequest request, HttpServletResponse response)
	throws SQLException, IOException {
		int empId = random.nextInt(1000);
		String empName = request.getParameter("empname");
		String empAdd =  request.getParameter("empadd");
		Employee newEmployee = new Employee(empId, empName, empAdd);
		System.out.println(newEmployee.getEmpId()+newEmployee.getEmpName()+newEmployee.getEmpAdd());
		employeeDao.insertEmployee(newEmployee);
		response.sendRedirect("listEmployee");
		
	}
	
	private void deleteEmployee(HttpServletRequest request, HttpServletResponse response)
	throws SQLException, IOException{
		int empId = Integer.parseInt(request.getParameter("empid"));
		employeeDao.deleteEmployee(empId);
		response.sendRedirect("list");
	}
	
	private void showEditForm(HttpServletRequest request, HttpServletResponse response)
	throws SQLException, ServletException, IOException{
		int empId = Integer.parseInt(request.getParameter("empid"));
		Employee existingEmployee = employeeDao.selectEmployee(empId);
		RequestDispatcher dispatcher = request.getRequestDispatcher("employee-form.jsp");
		request.setAttribute("employee", existingEmployee);
		dispatcher.forward(request, response);
	}
	
	private void updateEmployee(HttpServletRequest request, HttpServletResponse response)
	throws SQLException, IOException {
		int empId = Integer.parseInt(request.getParameter("empid"));
		String empName = request.getParameter("empname");
		String empAdd = request.getParameter("empadd");
		
		Employee employee = new Employee(empId, empName, empAdd);
		employeeDao.updateEmployee(employee);
		response.sendRedirect("list");
	}

	

}
